{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { message } from 'antd';\n\nconst useChatRoom = () => {\n  _s();\n\n  const [status, setStatus] = useState({});\n\n  const displayStatus = payload => {\n    if (payload.msg) {\n      const {\n        type,\n        msg\n      } = payload;\n      const content = {\n        content: msg,\n        duration: 0.5\n      };\n\n      switch (type) {\n        case 'success':\n          message.success(content);\n          break;\n\n        case 'error':\n          message.error(content);\n          break;\n\n        case 'info':\n          message.success(content);\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  return {\n    status,\n    setStatus,\n    displayStatus\n  };\n};\n\n_s(useChatRoom, \"PymnO1Zm6EB+jI+0g+kTn8iVnh0=\");\n\nexport default useChatRoom;","map":{"version":3,"sources":["/Users/karnielaliao/Downloads/wp1101-main 3/hw9/frontend/src/Hooks/useChatRoom.js"],"names":["useState","message","useChatRoom","status","setStatus","displayStatus","payload","msg","type","content","duration","success","error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,OAAR,QAAsB,MAAtB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMK,aAAa,GAAIC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACC,GAAZ,EAAgB;AACd,YAAM;AAACC,QAAAA,IAAD;AAAOD,QAAAA;AAAP,UAAcD,OAApB;AACA,YAAMG,OAAO,GAAG;AACdA,QAAAA,OAAO,EAAEF,GADK;AACAG,QAAAA,QAAQ,EAAE;AADV,OAAhB;;AAEA,cAAQF,IAAR;AACE,aAAK,SAAL;AACEP,UAAAA,OAAO,CAACU,OAAR,CAAgBF,OAAhB;AACA;;AACF,aAAK,OAAL;AACER,UAAAA,OAAO,CAACW,KAAR,CAAcH,OAAd;AACA;;AACF,aAAK,MAAL;AACER,UAAAA,OAAO,CAACU,OAAR,CAAgBF,OAAhB;AACA;;AACF;AAAS;AAVX;AAaD;AACF,GAnBH;;AAsBA,SAAO;AACHN,IAAAA,MADG;AAEHC,IAAAA,SAFG;AAGHC,IAAAA;AAHG,GAAP;AAMH,CAhCD;;GAAMH,W;;AAkCN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport {message} from 'antd'\n\nconst useChatRoom = () => {\n    \n    const [status, setStatus] = useState({})\n    \n    const displayStatus = (payload) => {\n        if (payload.msg){\n          const {type ,msg} = payload\n          const content = {\n            content: msg, duration: 0.5}\n          switch (type) {\n            case 'success':\n              message.success(content)\n              break\n            case 'error':\n              message.error(content)\n              break\n            case 'info':\n              message.success(content)\n              break;\n            default: break;\n    \n          }\n        }\n      }\n    \n    \n    return {\n        status,\n        setStatus,\n        displayStatus\n       \n    }\n}\n\nexport default useChatRoom"]},"metadata":{},"sourceType":"module"}